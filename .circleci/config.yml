---
version: 2

docker_image: &docker_image
  image: circleci/ruby:latest-node-browsers

restore_repo: &restore_repo
  restore_cache:
    keys:
      - v4-repo-{{ .Branch }}-{{ .Revision }}
      - v4-repo-{{ .Branch }}
      - v4-repo

restore_bundle: &restore_bundle
  restore_cache:
    keys:
      - v5-bundle-{{ checksum "Gemfile.lock" }}
      - v5-bundle

jobs:
  checkout_code:
    docker:
      - <<: *docker_image
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v4-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  bundle:
    docker:
      - <<: *docker_image
        environment:
          BUNDLE_SILENCE_ROOT_WARNING: true
          RAILS_ENV: test
    steps:
      - *restore_repo
      - checkout
      - *restore_bundle
      - run: gem update bundler
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          key: v5-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  rubocop:
    docker:
      - <<: *docker_image
    steps:
      - *restore_repo
      - *restore_bundle
      - run: bundle check --path vendor/bundle
      - run: bin/rubocop

  rspec:
    docker:
      - <<: *docker_image
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres
    steps:
      - *restore_repo
      - *restore_bundle
      - run: bundle check --path vendor/bundle
      - run: sudo apt-get update && sudo apt-get install -y netcat
      - run: while ! nc -z 127.0.0.1 5432; do sleep 1; done
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          command: |
            mkdir /tmp/test-results
            bundle exec rspec \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  main:
    jobs:
      - checkout_code
      - bundle:
          requires:
            - checkout_code
      - rubocop:
          requires:
            - bundle
      - rspec:
          requires:
            - bundle
